<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.ys.commens.dao.YsOrderDao">

    <resultMap type="org.ys.commens.entity.YsOrder" id="YsOrderMap">
        <result property="id" column="id" jdbcType="BIGINT"/>
        <result property="userId" column="user_id" jdbcType="BIGINT"/>
        <result property="goodsId" column="goods_id" jdbcType="BIGINT"/>
        <result property="status" column="status" jdbcType="VARCHAR"/>
        <result property="addtime" column="addTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!-- 批量插入 -->
    <insert id="insertBatch" keyProperty="" useGeneratedKeys="true">
        insert into ys_tb.ys_order(id, user_id, goods_id, status, addTime)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.id}, #{entity.userId}, #{entity.goodsId}, #{entity.status}, #{entity.addtime})
        </foreach>
    </insert>
    <!-- 批量插入或按主键更新 -->
    <insert id="insertOrUpdateBatch" keyProperty="" useGeneratedKeys="true">
        insert into ys_tb.ys_order(id, user_id, goods_id, status, addTime)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.id}, #{entity.userId}, #{entity.goodsId}, #{entity.status}, #{entity.addtime})
        </foreach>
        on duplicate key update
id = values(id) , user_id = values(user_id) , goods_id = values(goods_id) , status = values(status) , addTime = values(addTime)
   </insert>

    <insert id="addOrder">
        insert into ys_tb.ys_order(id, user_id, goods_id, status)
        values
        (#{cartItem.id}, #{cartItem.userId}, #{cartItem.itemId}, #{cartItem.statusEnum})
    </insert>
    <update id="updateStatusById">
        update ys_tb.ys_order set status = #{code} where id = #{id}
    </update>
    <delete id="deleteById">
        delete from ys_tb.ys_order where id = #{id}
    </delete>
    <select id="selectDetailById" resultType="java.util.Map">
        SELECT
            addr.addr "addr",
            o.id "orderId",
            us.username "username",
            us.email "email",
            us.tel "tel",
            goods.introduce "introduce"
        FROM
            ys_order o,
            ys_goods goods,
            ys_user us,
            ys_user_addr addr
        WHERE
            o.user_id = us.id
          AND o.goods_id = goods.id
          AND us.id = addr.user_id
          AND o.id = #{orderId}
    </select>

</mapper>

